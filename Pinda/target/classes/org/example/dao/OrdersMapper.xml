<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace:命名空间-->
<mapper namespace="org.example.dao.OrdersMapper">


    <insert id="Addorders">
        insert into orders (orderid,userid,employeeid,modifiedpersonid,createdtime,modifiedtime,
                            kind,weight,arrivetransfertime,starttime,finaltime,presentlocation,presentstate,startlocation,destination,deleted,amount)
        values (#{orderid},#{userid},#{employeeid},#{modifiedpersonid},#{createdtime},#{modifiedtime},
            #{kind},#{weight},#{arrivetransfertime},#{starttime},#{finaltime},#{presentlocation},#{presentstate},#{startlocation},#{destination},#{deleted},#{amount})
    </insert>

    <update id="Updateorders">
        update orders
        set userid=#{userid},employeeid=#{employeeid},modifiedpersonid=#{modifiedpersonid},createdtime=#{createdtime},modifiedtime=#{modifiedtime},
            startlocation=#{startlocation},destination=#{destination},deleted=#{deleted},amount=#{amount},kind = #{kind},
            weight = #{weight},arrivetransfertime = #{arrivetransfertime},starttime = #{starttime},finaltime = #{finaltime},
            presentlocation = #{presentlocation},presentstate = #{presentstate}
        where orderid = #{orderid}
    </update>

    <delete id="DeleteordersById">
        update orders
        set  deleted=1
        where orderid = #{orderid}
    </delete>
    <delete id="DeleteordersByIds">
        update orders
        set  deleted=1
        where orderid in
        <foreach collection="list" open="(" close=")" separator="," item="orderid">
            #{orderid}
        </foreach>
    </delete>

    <select id="QueryordersById" resultType="org.example.pojo.Orders">
        select * from orders where orderid = #{orderid} and deleted!=1
    </select>
    <select id="QueryordersAll" resultType="org.example.pojo.Orders">
        select * from orders where deleted!=1
    </select>
    <select id="QueryuserordersAll" resultType="org.example.pojo.Orders">
        select * from orders where userid = #{userid} and deleted!=1
    </select>


    <select id="searchOrders" resultType="org.example.pojo.Orders">
        select * from orders
        where concat(orderid,userid,employeeid,modifiedpersonid,finaltime,presentstate
            ,createdtime,startlocation,destination,amount,kind,arrivetransfertime,starttime) like concat('%',#{search},'%') and deleted!=1
    </select>
    <select id="searchuserOrders" resultType="org.example.pojo.Orders">
        select * from orders
        where concat(orderid,employeeid,modifiedpersonid,finaltime,presentstate
                  ,createdtime,startlocation,destination,amount,kind,arrivetransfertime,starttime) like concat('%',#{search},'%')
                and deleted!=1 and userid = #{userid}
    </select>

    <select id="Queryorders" resultType="org.example.pojo.Orders" parameterType="map">
        select * from orders
        <where>
            <!--添加if条件如果参数为空则不拼接sql-->
            <if test="orderid != null and orderid != '' ">
                and orderid like concat('%',#{orderid},'%')
            </if>
            <if test="userid != null and userid != '' ">
                and userid like concat('%',#{userid},'%')
            </if>
            <if test="employeeid != null and employeeid != '' ">
                and employeeid like concat('%',#{employeeid},'%')
            </if>
            <if test="startlocation != null and startlocation != '' ">
                and startlocation like concat('%',#{startlocation},'%')
            </if>
            <if test="destination != null and destination != '' ">
                and destination like concat('%',#{destination},'%')
            </if>
            <if test="amount != null and amount != '' and (amount > 0 or amount = 0)">
                and amount like concat('%',#{amount},'%')
            </if>
        </where>
    </select>


</mapper>